openapi: 3.0.3
info:
  title: User service
  description: API for managing users data
  version: 1.0.0
servers:
  - url: 'http://localhost:8081/user-api/v1'
paths:
  /user-api/v1/user:
    post:
      summary: Create or authorize a user
      parameters:
        - name: CorrelationId
          in: header
          schema:
            type: string
            example: aa1ff211-b5dd-4397-b8a8-3f640705efa2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                initData:
                  type: integer
      responses:
        '201':
          description: User successfully created
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '200':
          description: User successfully authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
        '204':
          description: User data updated and authorized
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
        '400':
          description: initData is invalid
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
        '5XX':
          description: Любая неожиданная ошибка сервиса
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
  /leadership:
    get:
      summary: Get the general leaderboard
      parameters:
        - name: CorrelationId
          in: header
          schema:
            type: string
            example: aa1ff211-b5dd-4397-b8a8-3f640705efa2
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 20
            description: size of leaderboard
        - name: pageNumber
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: General leaderboard
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        '5XX':
          description: Любая неожиданная ошибка сервиса
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'

  /leaderboard/{subjectId}:
    get:
      summary: Get leaderboard by particular subject
      parameters:
        - name: CorrelationId
          in: header
          schema:
            type: string
            example: aa1ff211-b5dd-4397-b8a8-3f640705efa2
        - name: subjectId
          in: path
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 20
            description: size of leaderboard
        - name: pageNumber
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Leaderboard by particular subject
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
        '5XX':
          description: Любая неожиданная ошибка сервиса
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            CorrelationId:
              $ref: '#/components/headers/CorrelationId'
components:
  headers:
    CorrelationId:
      schema:
        type: string
        example: aa1ff211-b5dd-4397-b8a8-3f640705efa2
      description: Correlation ID for tracking responses

  schemas:
    UserDto:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
          description: uuid
        username:
          type: string
        score:
          type: integer

    ErrorResponse:
      type: object
      required:
        - title
        - detail
        - request
        - time
        - errorTraceId
      properties:
        title:
          type: string
          example: Entity not found
        detail:
          type: string
          example: Entity [Post] with id = [123456] not found. You MUST use POST to add entity instead of PUT
        request:
          type: string
          example: POST /user-api/v1/user
        time:
          type: string
          format: date-time
          example: 1996-12-19T16:39:57.87-08:00
        errorTraceId:
          type: string
          example: ce1ff211-b5dd-4397-b8a8-3f640705efa2
        errorCode:
          type: integer
          format: int32
          example: 57
        exception:
          type: string
          example: NullPointerException
        stacktrace:
          type: string
        causeException:
          type: string
        causeStacktrace:
          type: string
